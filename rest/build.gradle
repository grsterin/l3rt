buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.dimafeng:containerized-tasks:0.5.2"
    }
}

apply plugin: "com.dimafeng.containerizedTask"

dependencies {
    compile("io.undertow:undertow-core:$undertowVersion")
    compile project(":core")
}

task buildClient(type: com.dimafeng.containerizedtasks.NpmContainerizedTask) {
    doFirst {
        if (gradle.taskGraph.getAllTasks().find { it.getName().endsWith("buildDocker") } == null) {
            throw new StopExecutionException()
        }
    }
    sourcesDir = '../client'
    imageName = 'node:6.11.3'
    scriptBody = """
                |npm install --unsafe-perm
                |npm run build
                """.stripMargin()
}

task copyClientSide(type: Sync, dependsOn: buildClient) {
    from '../client/out'
    into "src/main/resources/"
}

processResources.dependsOn(copyClientSide)